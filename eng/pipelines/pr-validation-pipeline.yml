name: pr-validation-pipeline

# Trigger the pipeline on merge to main branch
trigger:
  branches:
    include:
      - main

jobs:
  - job: TestMacOS
    pool:
      vmImage: 'macos-latest'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.13.5'
        addToPath: true
      displayName: 'Use Python 3.13 on macOS'

    - script: |
        brew update
        brew install cmake
      displayName: 'Install CMake'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install Python dependencies'

    - script: |
        cd mssql_python/pybind
        ./build.sh
      displayName: 'Build pybind bindings (.so)'

    - script: |
        echo "Running main.py on macOS"
        python main.py
      displayName: 'Run main.py to ensure Python is working'
      env:
        # Temporarily Use Azure SQL Database connection string for testing purposes since Docker takes too long to install & start in MacOS
        DB_CONNECTION_STRING: $(AZURE_CONNECTION_STRING)
        # DB_CONNECTION_STRING: 'Driver=ODBC Driver 18 for SQL Server;Server=localhost;Database=master;Uid=SA;Pwd=$(DB_PASSWORD);TrustServerCertificate=yes'
        DB_PASSWORD: $(DB_PASSWORD)

    # - script: |
    #     echo "Build successful, running tests now"
    #     python -m pytest -v --junitxml=test-results.xml --cov=. --cov-report=xml --capture=tee-sys --cache-clear
    #   displayName: 'Run pytest with coverage'
    #   env:
    #     # Temporarily Use Azure SQL Database connection string for testing purposes since Docker takes too long to install & start in MacOS
    #     DB_CONNECTION_STRING: $(AZURE_CONNECTION_STRING)
    #     # DB_CONNECTION_STRING: 'Driver=ODBC Driver 18 for SQL Server;Server=localhost;Database=master;Uid=SA;Pwd=$(DB_PASSWORD);TrustServerCertificate=yes'
    #     DB_PASSWORD: $(DB_PASSWORD)

    - script: |
        if [ ! -f benchmarks/bench_mssql.py ]; then
          echo "ERROR: bench_mssql.py not found in benchmarks/"
          exit 1
        fi
        echo "bench_mssql.py found. Proceeding..."
      displayName: 'Check if benchmarks/bench_mssql.py exists'

    - script: |
        echo "Installing RichBench and running benchmark script"
        pip install richbench
        cd benchmarks
        richbench bench_mssql.py
      displayName: 'Run RichBench benchmarks'
      env:
        DB_CONNECTION_STRING: $(AZURE_CONNECTION_STRING)
        DB_PASSWORD: $(DB_PASSWORD)